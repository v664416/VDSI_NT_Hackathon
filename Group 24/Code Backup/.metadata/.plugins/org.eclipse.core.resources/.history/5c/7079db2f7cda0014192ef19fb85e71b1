package org.rongubombu.db;

import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.concurrent.Callable;

public class DbUpdateProcessor implements Callable<Boolean> {

	private List<Book> books;

	public DbUpdateProcessor(List<Book> books) {
		this.books = books;
	}

	public boolean updateBook(List<Book> books) {
		Connection conn = null;
		Statement ps = null;
		try {
			conn = DBConnectionUtil.getConection();
			ps = conn.createStatement();
			for (Book book : books) {
				String sql = "";
				if (book.getAction().equals(ACTION.ADD)) {
					sql = "INSERT INTO BOOKS (BOOK_NAME,AUTHOR_NAME,PUBLISHER,CATEGORY,DESCRIPTION,URL) VALUES ('"
							+ book.getBookName()
							+ "', '"
							+book.getAuthorName()
							+ "', '"
							+book.getPublisherName()
							+ "', '"
							+  book.getCategory()
							+ "', '"
							+book.getDescription()
							+ "', '" + book.getUrl() + "')";
					ps.addBatch(sql);
					
				}
			}
			ps.executeBatch();
		} catch (SQLException e) {
			return false;
		} finally {
			DBConnectionUtil.close(ps, null);
			DBConnectionUtil.closeConection(conn);
			System.out.println(Thread.currentThread().getName()+" completed");
		}
		return true;

	}

	@Override
	public Boolean call() throws Exception {
		return updateBook(books);
	}
}
