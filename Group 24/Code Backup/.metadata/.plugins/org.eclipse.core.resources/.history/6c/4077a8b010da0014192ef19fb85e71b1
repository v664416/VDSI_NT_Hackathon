package org.rongubombu.db.servlets;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.rongubombu.db.Book;
import org.rongubombu.db.CatalogProcessor;
import org.rongubombu.db.DBConnectionUtil;
import org.rongubombu.db.DbHelper;

/**
 * Servlet implementation class DbUpdater
 */
@WebServlet("/DbUpdater")
public class DbUpdater extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doGet(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		doPost(request, response);
	}

	protected void doPost(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		List<Book> books = CatalogProcessor.getInstance().processCatalog();
		if (null != books && !books.isEmpty()) {
			DbHelper helper = new DbHelper();
			for (Book book : books) {
				if (null != book) {
					helper.updateBook(book);
				}
			}
		}
		deleteBooksTrigger();
	}
	
	private void deleteBooksTrigger(){
		PreparedStatement ps = null;
		Connection conn=null;
		try {
			conn = DBConnectionUtil.getConection();
			ps = conn.prepareStatement("TRUNCATE BOOKS_TRIGGER");
			ps.executeUpdate();
		}
		catch(Exception e){
			e.printStackTrace();
		}finally {
			DBConnectionUtil.close(ps, null);
			DBConnectionUtil.closeConection(conn);
		}
		

	}

}
