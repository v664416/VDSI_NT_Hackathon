package org.rongubombu.db;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.TimerTask;

import org.rongubombu.elasticsearch.ELSearchConnectionUtil;

public class EsTimer extends TimerTask{

	@Override
	public void run() {
		
	}
	
	private void updateEs(){
		Connection conn = null;
		ResultSet rs = null;
		PreparedStatement ps = null;
		ResultSet rs1 = null;
		PreparedStatement ps1 = null;
		try {
			conn = DBConnectionUtil.getConection();
			String sql = "SELECT BOOK_ID FROM BOOKS_TRIGGER WHERE ACTION='UPDATE'";
			ps = conn.prepareStatement(sql);
			rs = ps.executeQuery();
			while (rs.next()) {
				ps1=conn.prepareStatement("SELECT BOOK_ID,BOOK_NAME,AUTHOR_NAME,PUBLISHER,DESCRIPTION,URL FROM BOOKS WHERE BOOK_ID=?");
				ps1.setInt(1,rs.getInt("BOOK_ID"));
				rs1=ps1.executeQuery();
				while(rs1.next()){
					Book book = new Book();
					book.setBookId(rs1.getString("BOOK_ID"));
					book.setBookId(rs1.getString("BOOK_ID"));
					book.setBookId(rs1.getString("BOOK_ID"));
					book.setBookId(rs1.getString("BOOK_ID"));
					book.setBookId(rs1.getString("BOOK_ID"));
					book.setBookId(rs1.getString("BOOK_ID"));
				//	ELSearchConnectionUtil.updateDocument();
				}
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			DBConnectionUtil.close(ps, rs);
			DBConnectionUtil.closeConection(conn);
		}
		return 0;
	}

}
